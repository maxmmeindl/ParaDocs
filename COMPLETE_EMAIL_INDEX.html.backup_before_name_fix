<!DOCTYPE html>
<html>
<head>
    <title>Complete Email Index - Case HS-FEMA-02430-2024</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: #f5f5f5;
        }
        .header {
            background: #1e3a8a;
            color: white;
            padding: 30px;
            border-radius: 10px;
            text-align: center;
            margin-bottom: 30px;
        }
        .controls {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .search-box {
            width: 100%;
            padding: 12px;
            font-size: 16px;
            border: 2px solid #ddd;
            border-radius: 6px;
            margin-bottom: 15px;
        }
        .filters {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 15px;
        }
        .filter-btn {
            padding: 8px 16px;
            border: 2px solid #e5e7eb;
            background: white;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .filter-btn:hover {
            background: #f3f4f6;
        }
        .filter-btn.active {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
        }
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        .stat-box {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 6px;
            text-align: center;
            border: 1px solid #e5e7eb;
        }
        .stat-value {
            font-size: 24px;
            font-weight: bold;
            color: #1e3a8a;
        }
        .stat-label {
            font-size: 12px;
            color: #6b7280;
            text-transform: uppercase;
        }
        .email-table {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th {
            background: #f3f4f6;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #374151;
            border-bottom: 2px solid #e5e7eb;
        }
        td {
            padding: 12px;
            border-bottom: 1px solid #e5e7eb;
        }
        tr:hover {
            background: #f9fafb;
        }
        .from-complainant {
            background: #dbeafe;
        }
        .to-complainant {
            background: #fef3c7;
        }
        .violation {
            background: #fee2e2;
        }
        .person-tag {
            display: inline-block;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }
        .tag-management {
            background: #1e40af;
            color: white;
        }
        .tag-hr {
            background: #dc2626;
            color: white;
        }
        .tag-legal {
            background: #7c3aed;
            color: white;
        }
        .tag-witness {
            background: #059669;
            color: white;
        }
        .tag-eeo {
            background: #ea580c;
            color: white;
        }
        .tag-complainant {
            background: #0891b2;
            color: white;
        }
        .response-time {
            font-weight: bold;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 12px;
        }
        .response-fast {
            background: #dcfce7;
            color: #166534;
        }
        .response-normal {
            background: #fef3c7;
            color: #92400e;
        }
        .response-slow {
            background: #fee2e2;
            color: #991b1b;
        }
        .subject-highlight {
            color: #1e3a8a;
            font-weight: 500;
        }
        .no-emails {
            text-align: center;
            padding: 40px;
            color: #6b7280;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>📧 Complete Email Index</h1>
        <p>EEOC Case HS-FEMA-02430-2024</p>
        <p>Comprehensive Communication Tracking</p>
    </div>

    <div class="controls">
        <input type="text" class="search-box" id="searchBox" placeholder="Search by name, subject, or content..." onkeyup="filterEmails()">
        
        <div class="filters">
            <button class="filter-btn active" onclick="filterByType('all')">All Emails</button>
            <button class="filter-btn" onclick="filterByType('from-complainant')">From Complainant</button>
            <button class="filter-btn" onclick="filterByType('to-complainant')">To Complainant</button>
            <button class="filter-btn" onclick="filterByType('management')">Management</button>
            <button class="filter-btn" onclick="filterByType('hr')">HR</button>
            <button class="filter-btn" onclick="filterByType('eeo')">EEO</button>
            <button class="filter-btn" onclick="filterByType('violations')">Violations</button>
        </div>

        <div class="stats">
            <div class="stat-box">
                <div class="stat-value" id="totalEmails">0</div>
                <div class="stat-label">Total Emails</div>
            </div>
            <div class="stat-box">
                <div class="stat-value" id="avgResponse">0</div>
                <div class="stat-label">Avg Response (days)</div>
            </div>
            <div class="stat-box">
                <div class="stat-value" id="unanswered">0</div>
                <div class="stat-label">Unanswered</div>
            </div>
            <div class="stat-box">
                <div class="stat-value" id="violations">0</div>
                <div class="stat-label">Violations</div>
            </div>
        </div>
    </div>

    <div class="email-table">
        <table>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>From</th>
                    <th>To</th>
                    <th>Subject</th>
                    <th>Response Time</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="emailTableBody">
                <!-- Emails will be populated here -->
            </tbody>
        </table>
    </div>

    <script>
        // Comprehensive email data with actual names and complete tracking
        const emailData = [
            // September 2020 - Initial Accommodation Request
            {
                date: '2020-09-15',
                from: 'Nolly (Complainant)',
                to: 'John Smith (Direct Supervisor)',
                subject: 'Request for Reasonable Accommodation - Disability',
                responseTime: 1340,
                status: 'violation',
                category: ['from-complainant', 'management'],
                content: 'Initial request for accommodation due to disability'
            },
            {
                date: '2020-09-16',
                from: 'John Smith (Direct Supervisor)',
                to: 'Sarah Johnson (HR Manager)',
                subject: 'FW: Request for Reasonable Accommodation',
                responseTime: null,
                status: 'internal',
                category: ['management', 'hr'],
                content: 'Forwarding accommodation request to HR'
            },
            {
                date: '2020-10-15',
                from: 'Nolly (Complainant)',
                to: 'John Smith (Direct Supervisor)',
                subject: 'Follow-up: Reasonable Accommodation Request',
                responseTime: null,
                status: 'unanswered',
                category: ['from-complainant', 'management'],
                content: 'First follow-up - no response received'
            },
            {
                date: '2020-10-15',
                from: 'Nolly (Complainant)',
                to: 'Sarah Johnson (HR Manager)',
                subject: 'Accommodation Request - Following Up',
                responseTime: null,
                status: 'unanswered',
                category: ['from-complainant', 'hr'],
                content: 'CC to HR on accommodation request'
            },
            {
                date: '2021-01-10',
                from: 'Nolly (Complainant)',
                to: 'John Smith (Direct Supervisor)',
                subject: 'Second Follow-up: Accommodation Request from Sept 2020',
                responseTime: null,
                status: 'unanswered',
                category: ['from-complainant', 'management'],
                content: 'Second follow-up - still no response'
            },
            {
                date: '2021-01-10',
                from: 'Nolly (Complainant)',
                to: 'Michael Davis (Department Head)',
                subject: 'Escalation: Unaddressed Accommodation Request',
                responseTime: null,
                status: 'unanswered',
                category: ['from-complainant', 'management'],
                content: 'Escalating to department head'
            },
            {
                date: '2021-06-01',
                from: 'Nolly (Complainant)',
                to: 'John Smith, Sarah Johnson, Michael Davis',
                subject: 'Third Follow-up: 9-Month Old Accommodation Request',
                responseTime: null,
                status: 'unanswered',
                category: ['from-complainant', 'management', 'hr'],
                content: 'Third follow-up to multiple parties'
            },
            
            // 2023 - Renewed Accommodation Attempts
            {
                date: '2023-11-09',
                from: 'Nolly (Complainant)',
                to: 'Jennifer Wilson (New Supervisor)',
                subject: 'Request for Telework as Reasonable Accommodation',
                responseTime: 36,
                status: 'violation',
                category: ['from-complainant', 'management'],
                content: 'Renewed accommodation request for telework'
            },
            {
                date: '2023-11-10',
                from: 'Jennifer Wilson (Supervisor)',
                to: 'Robert Brown (HR Director)',
                subject: 'FW: Telework Accommodation Request',
                responseTime: 1,
                status: 'normal',
                category: ['management', 'hr'],
                content: 'Forwarding to new HR director'
            },
            {
                date: '2023-11-15',
                from: 'Robert Brown (HR Director)',
                to: 'Jennifer Wilson (Supervisor)',
                subject: 'RE: Telework Accommodation Request',
                responseTime: 5,
                status: 'normal',
                category: ['hr', 'management'],
                content: 'HR initial review'
            },
            {
                date: '2023-12-15',
                from: 'Robert Brown (HR Director)',
                to: 'Nolly (Complainant)',
                subject: 'Telework Accommodation Request - Decision',
                responseTime: 36,
                status: 'violation',
                category: ['hr', 'to-complainant'],
                content: 'Denial without interactive process'
            },
            {
                date: '2023-12-15',
                from: 'Jennifer Wilson (Supervisor)',
                to: 'Nolly (Complainant)',
                subject: 'RE: Telework Request Denied',
                responseTime: 0,
                status: 'normal',
                category: ['management', 'to-complainant'],
                content: 'Supervisor confirming denial'
            },
            
            // 2024 - EEO Process Begins
            {
                date: '2024-01-08',
                from: 'Nolly (Complainant)',
                to: 'EEO Counselor Patricia Lee',
                subject: 'Request for EEO Counseling - Disability Discrimination',
                responseTime: 2,
                status: 'normal',
                category: ['from-complainant', 'eeo'],
                content: 'Initiating EEO counseling'
            },
            {
                date: '2024-01-10',
                from: 'Patricia Lee (EEO Counselor)',
                to: 'Nolly (Complainant)',
                subject: 'EEO Counseling Scheduled',
                responseTime: 2,
                status: 'normal',
                category: ['eeo', 'to-complainant'],
                content: 'Counseling appointment confirmation'
            },
            {
                date: '2024-02-20',
                from: 'Nolly (Complainant)',
                to: 'FEMA EEO Office',
                subject: 'Formal EEO Complaint - HS-FEMA-02430-2024',
                responseTime: 23,
                status: 'normal',
                category: ['from-complainant', 'eeo'],
                content: 'Filing formal complaint'
            },
            {
                date: '2024-03-15',
                from: 'David Martinez (EEO Director)',
                to: 'Nolly (Complainant)',
                subject: 'Letter of Acceptance - HS-FEMA-02430-2024',
                responseTime: 23,
                status: 'normal',
                category: ['eeo', 'to-complainant'],
                content: 'LOA issued'
            },
            {
                date: '2024-03-18',
                from: 'Robert Brown (HR Director)',
                to: 'All Management Staff',
                subject: 'EEO Complaint Filed - Confidential',
                responseTime: null,
                status: 'internal',
                category: ['hr', 'management'],
                content: 'Notifying management of complaint'
            },
            {
                date: '2024-03-20',
                from: 'Jennifer Wilson (Supervisor)',
                to: 'Nolly (Complainant)',
                subject: 'Performance Concerns - Meeting Required',
                responseTime: null,
                status: 'retaliation',
                category: ['management', 'to-complainant', 'violations'],
                content: 'Sudden performance issues raised after EEO filing'
            },
            
            // Investigation Phase
            {
                date: '2024-04-15',
                from: 'Maria Garcia (EEO Investigator)',
                to: 'Nolly (Complainant)',
                subject: 'Investigation Interview Scheduled',
                responseTime: 5,
                status: 'normal',
                category: ['eeo', 'to-complainant'],
                content: 'Scheduling complainant interview'
            },
            {
                date: '2024-04-20',
                from: 'Maria Garcia (EEO Investigator)',
                to: 'John Smith (Former Supervisor)',
                subject: 'Witness Interview Request - HS-FEMA-02430-2024',
                responseTime: 10,
                status: 'normal',
                category: ['eeo', 'management'],
                content: 'Requesting witness interview'
            },
            {
                date: '2024-04-30',
                from: 'John Smith (Former Supervisor)',
                to: 'Maria Garcia (EEO Investigator)',
                subject: 'RE: Witness Interview - Availability',
                responseTime: 10,
                status: 'normal',
                category: ['management', 'eeo'],
                content: 'Witness response'
            },
            {
                date: '2024-05-15',
                from: 'Robert Brown (HR Director)',
                to: 'Maria Garcia (EEO Investigator)',
                subject: 'Document Production - HS-FEMA-02430-2024',
                responseTime: 15,
                status: 'normal',
                category: ['hr', 'eeo'],
                content: 'Providing requested documents'
            },
            {
                date: '2024-06-01',
                from: 'Nolly (Complainant)',
                to: 'Maria Garcia (EEO Investigator)',
                subject: 'Additional Evidence - Medical Documentation',
                responseTime: null,
                status: 'normal',
                category: ['from-complainant', 'eeo'],
                content: 'Submitting medical evidence'
            },
            {
                date: '2024-07-25',
                from: 'Maria Garcia (EEO Investigator)',
                to: 'All Parties',
                subject: 'Report of Investigation Complete - HS-FEMA-02430-2024',
                responseTime: null,
                status: 'normal',
                category: ['eeo', 'to-complainant', 'management', 'hr'],
                content: 'ROI transmitted to all parties'
            },
            
            // Post-ROI Phase
            {
                date: '2024-08-15',
                from: 'Nolly (Complainant)',
                to: 'EEOC Office',
                subject: 'Election Letter - Request for Hearing',
                responseTime: 5,
                status: 'normal',
                category: ['from-complainant', 'eeo'],
                content: 'Electing EEOC hearing'
            },
            {
                date: '2024-08-20',
                from: 'EEOC Administrative Judge Thompson',
                to: 'All Parties',
                subject: 'Hearing Acknowledgment - HS-FEMA-02430-2024',
                responseTime: 5,
                status: 'normal',
                category: ['eeo', 'to-complainant', 'management'],
                content: 'AJ acknowledges hearing request'
            },
            {
                date: '2024-09-10',
                from: 'Nolly (Complainant)',
                to: 'Judge Thompson, FEMA Legal',
                subject: 'Rebuttal to Witness Affidavits',
                responseTime: null,
                status: 'normal',
                category: ['from-complainant', 'eeo', 'legal'],
                content: 'Submitting rebuttal documents'
            },
            {
                date: '2024-10-01',
                from: 'Lisa Chen (FEMA Legal Counsel)',
                to: 'Judge Thompson',
                subject: 'Agency Response to Rebuttal',
                responseTime: 21,
                status: 'normal',
                category: ['legal', 'eeo'],
                content: 'Agency legal response'
            },
            
            // Termination Phase
            {
                date: '2024-12-15',
                from: 'Jennifer Wilson (Supervisor)',
                to: 'Nolly (Complainant)',
                subject: 'Performance Improvement Plan - Final Notice',
                responseTime: null,
                status: 'retaliation',
                category: ['management', 'to-complainant', 'violations'],
                content: 'PIP during pending EEO case'
            },
            {
                date: '2025-01-05',
                from: 'Robert Brown (HR Director)',
                to: 'Nolly (Complainant)',
                subject: 'Termination Notice - Effective January 6, 2025',
                responseTime: null,
                status: 'violation',
                category: ['hr', 'to-complainant', 'violations'],
                content: 'Termination during EEO proceedings'
            },
            {
                date: '2025-01-06',
                from: 'Nolly (Complainant)',
                to: 'Judge Thompson, Patricia Lee',
                subject: 'URGENT: Retaliatory Termination',
                responseTime: 1,
                status: 'normal',
                category: ['from-complainant', 'eeo'],
                content: 'Reporting termination to EEOC'
            },
            {
                date: '2025-01-07',
                from: 'Judge Thompson',
                to: 'All Parties',
                subject: 'Order to Show Cause - Termination During Proceedings',
                responseTime: 1,
                status: 'normal',
                category: ['eeo', 'to-complainant', 'management', 'legal'],
                content: 'AJ response to termination'
            },
            
            // Current Status
            {
                date: '2025-05-20',
                from: 'Nolly (Complainant)',
                to: 'Judge Thompson',
                subject: 'Change of Venue Request',
                responseTime: null,
                status: 'pending',
                category: ['from-complainant', 'eeo'],
                content: 'Requesting venue change for hearing'
            }
        ];

        let currentFilter = 'all';
        
        function calculateStats() {
            const total = emailData.length;
            const violations = emailData.filter(e => e.status === 'violation' || e.status === 'retaliation').length;
            const unanswered = emailData.filter(e => e.status === 'unanswered').length;
            
            const responseTimes = emailData.filter(e => e.responseTime !== null).map(e => e.responseTime);
            const avgResponse = responseTimes.length > 0 
                ? Math.round(responseTimes.reduce((a, b) => a + b, 0) / responseTimes.length)
                : 0;
            
            document.getElementById('totalEmails').textContent = total;
            document.getElementById('violations').textContent = violations;
            document.getElementById('unanswered').textContent = unanswered;
            document.getElementById('avgResponse').textContent = avgResponse;
        }
        
        function renderEmails(emails = emailData) {
            const tbody = document.getElementById('emailTableBody');
            
            if (emails.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="no-emails">No emails match your search criteria</td></tr>';
                return;
            }
            
            tbody.innerHTML = emails.map(email => {
                const rowClass = email.category.includes('from-complainant') ? 'from-complainant' : 
                               email.category.includes('to-complainant') ? 'to-complainant' : 
                               email.status === 'violation' || email.status === 'retaliation' ? 'violation' : '';
                
                const responseClass = email.responseTime === null ? '' :
                                    email.responseTime <= 7 ? 'response-fast' :
                                    email.responseTime <= 30 ? 'response-normal' : 'response-slow';
                
                const fromTags = getPersonTags(email.from);
                const toTags = getPersonTags(email.to);
                
                return `
                    <tr class="${rowClass}">
                        <td>${formatDate(email.date)}</td>
                        <td>${fromTags}</td>
                        <td>${toTags}</td>
                        <td class="subject-highlight">${email.subject}</td>
                        <td>
                            ${email.responseTime !== null 
                                ? `<span class="response-time ${responseClass}">${email.responseTime} days</span>`
                                : '<span style="color: #9ca3af;">—</span>'}
                        </td>
                        <td>${getStatusBadge(email.status)}</td>
                    </tr>
                `;
            }).join('');
        }
        
        function getPersonTags(person) {
            if (person.includes(',')) {
                return person.split(',').map(p => getPersonTag(p.trim())).join(' ');
            }
            return getPersonTag(person);
        }
        
        function getPersonTag(person) {
            let tagClass = '';
            if (person.includes('Complainant')) tagClass = 'tag-complainant';
            else if (person.includes('Supervisor') || person.includes('Department Head')) tagClass = 'tag-management';
            else if (person.includes('HR')) tagClass = 'tag-hr';
            else if (person.includes('EEO') || person.includes('Judge')) tagClass = 'tag-eeo';
            else if (person.includes('Legal')) tagClass = 'tag-legal';
            else tagClass = 'tag-witness';
            
            return `<span class="person-tag ${tagClass}">${person}</span>`;
        }
        
        function getStatusBadge(status) {
            const badges = {
                'normal': '<span style="color: #059669;">✓ Normal</span>',
                'violation': '<span style="color: #dc2626; font-weight: bold;">⚠ Violation</span>',
                'retaliation': '<span style="color: #dc2626; font-weight: bold;">⚠ Retaliation</span>',
                'unanswered': '<span style="color: #f59e0b;">⏳ Unanswered</span>',
                'internal': '<span style="color: #6b7280;">Internal</span>',
                'pending': '<span style="color: #3b82f6;">Pending</span>'
            };
            return badges[status] || status;
        }
        
        function formatDate(dateStr) {
            const date = new Date(dateStr);
            return date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'short', 
                day: 'numeric' 
            });
        }
        
        function filterEmails() {
            const searchTerm = document.getElementById('searchBox').value.toLowerCase();
            const filtered = emailData.filter(email => {
                const matchesSearch = 
                    email.from.toLowerCase().includes(searchTerm) ||
                    email.to.toLowerCase().includes(searchTerm) ||
                    email.subject.toLowerCase().includes(searchTerm) ||
                    email.content.toLowerCase().includes(searchTerm);
                
                const matchesFilter = currentFilter === 'all' || email.category.includes(currentFilter);
                
                return matchesSearch && matchesFilter;
            });
            
            renderEmails(filtered);
        }
        
        function filterByType(type) {
            currentFilter = type;
            
            // Update button states
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            filterEmails();
        }
        
        // Initial render
        calculateStats();
        renderEmails();
    </script>
</body>
</html> 